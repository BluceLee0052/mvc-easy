<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<global-method-security secured-annotations="enabled" pre-post-annotations="enabled">
	</global-method-security>

	<http use-expressions="true" auto-config="false" entry-point-ref="authenticationProcessingFilterEntryPoint">
		<!-- 无需进行权限验证的路径 -->
		<intercept-url pattern="/login" filters="none" />
		<intercept-url pattern="/admin/css/**" filters="none" />
		<intercept-url pattern="/admin/js/**" filters="none" />
		<intercept-url pattern="/admin/imgs/**" filters="none" />
		<intercept-url pattern="/*.html" filters="none" />

		<!-- 退出 -->
		<logout invalidate-session="true" logout-url="/logout" logout-success-url="/login?status=logout" />
		<remember-me />

		<!-- 登录表单 -->
		<custom-filter position="FORM_LOGIN_FILTER" ref="authenticationProcessingFilter" />
		<custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="easySecurityFilter" />
		<custom-filter before="CONCURRENT_SESSION_FILTER" ref="concurrentSessionFilter" />
		<!-- 权限异常拦截 -->
		<custom-filter after="EXCEPTION_TRANSLATION_FILTER" ref="exceptionTranslationFilter" />
	</http>

	<!-- 异常拦截 -->
	<beans:bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<beans:property name="authenticationEntryPoint" ref="authenticationProcessingFilterEntryPoint" />
		<beans:property name="accessDeniedHandler" ref="accessDeniedHandler" />
	</beans:bean>

	<!-- 无权限配置 -->
	<beans:bean id="accessDeniedHandler" class="com.easy.core.security.EasyAccessDeniedHandlerImpl">
		<beans:property name="errorPage" value="/403.html" />
	</beans:bean>

	<!-- 密码混淆 -->
	<beans:bean id="easyPasswordEncoder" class="com.easy.core.security.EasyPasswordEncoder" />
	
	<!-- 密码混淆 -->
	<beans:bean id="easySaltSource" class="com.easy.core.security.EasySaltSource" />

	<!-- 用户认证器 -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userServiceImpl">
			<password-encoder ref="easyPasswordEncoder">
				<salt-source ref="easySaltSource" />
			</password-encoder>
		</authentication-provider>
	</authentication-manager>

	<!-- 资源加载 -->
	<beans:bean id="mapRelation" class="com.easy.core.security.PropertiesPermissionMapRelation">
		<beans:property name="resources">
			<beans:list>
				<beans:value>classpath:config/permission.properties</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="prefixPermission" value="${easy.permisson.prefix}" />
	</beans:bean>

	<!-- 登录配置 -->
	<!-- TODO 需要重写，验证验证码 -->
	<beans:bean id="authenticationProcessingFilter" class="com.easy.core.security.EasyUsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationDetailsSource" ref="easyAuthenticationDetailsSource" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="filterProcessesUrl" value="/loginvalidate" />
		<beans:property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />
		<beans:property name="authenticationFailureHandler" ref="authenticationFailureHandler" />
		<beans:property name="sessionAuthenticationStrategy" ref="sessionControlStrategy" />
	</beans:bean>

	<!-- session 控制策略 -->
	<beans:bean id="sessionControlStrategy" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
		<beans:constructor-arg ref="sessionRegistry" />
		<beans:property name="maximumSessions" value="1" />
		<!-- 挤下第一次，为false，true表示第二次不让登录 -->
		<beans:property name="exceptionIfMaximumExceeded" value="false" />
		<!-- session 策略 合并、新建等 -->
	</beans:bean>

	<!-- session一致性过滤 -->
	<beans:bean id="concurrentSessionFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<beans:property name="sessionRegistry" ref="sessionRegistry" />
		<beans:property name="expiredUrl" value="/login?status=relogin" />
	</beans:bean>

	<!-- session注册 -->
	<beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />

	<beans:bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login" />
		<beans:property name="forceHttps" value="false" />
	</beans:bean>

	<!-- 登录成功处理 -->
	<beans:bean id="authenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/admin/index" />
		<beans:property name="alwaysUseDefaultTargetUrl" value="true" />
	</beans:bean>

	<!--登录失处理 -->
	<beans:bean id="authenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/login?status=login_error" />
	</beans:bean>

	<beans:bean id="httpSessionSecurityContextRepository" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository" />

	<!-- 修改默认的登录详情记录信息 -->
	<beans:bean id="easyAuthenticationDetailsSource" class="org.springframework.security.web.authentication.WebAuthenticationDetailsSource">
		<beans:property name="clazz" value="com.easy.core.security.EasyWebAuthenticationDetails"></beans:property>
	</beans:bean>

	<!-- 自定义的过滤器easySecurityFilter -->
	<beans:bean id="easySecurityFilter" class="com.easy.core.security.EasySecurityFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="easyAccessDecisionManager" />
		<beans:property name="securityMetadataSource" ref="easyInvocationSecurityMetadataSource" />
	</beans:bean>

	<!-- 资源源数据定义，即定义某一资源可以被哪些角色访问 -->
	<beans:bean id="easyInvocationSecurityMetadataSource" class="com.easy.core.security.EasyInvocationSecurityMetadataSource">
		<beans:property name="mapRelation" ref="mapRelation" />
	</beans:bean>

	<!--访问决策器 -->
	<beans:bean id="easyAccessDecisionManager" class="com.easy.core.security.EasyAccessDecisionManager">
		<beans:property name="decisionVoters">
			<beans:list>
				<beans:bean class="org.springframework.security.access.vote.RoleVoter">
					<!-- 可修改默认角色前缀 -->
					<beans:property name="rolePrefix" value="${easy.permisson.prefix}" />
				</beans:bean>
				<beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</beans:list>
		</beans:property>
	</beans:bean>

</beans:beans>
