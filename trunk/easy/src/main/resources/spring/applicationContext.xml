<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/context     
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/task 
    http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!-- 开启注解配置 -->
	<context:annotation-config />

	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="com.easy.*">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 启用@Aspect支持 -->
	<aop:aspectj-autoproxy proxy-target-class="true" expose-proxy="true" />

	<!-- 配置文件 -->
	<!-- class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" -->
	<bean id="propertyConfigurer" class="com.easy.core.spring.SupportConvertPropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:jdbc.properties</value>
			</list>
		</property>
		<!-- 调试模式不进行属性转换 -->
		<property name="debug" value="true" />
		<!-- 需要转换的key列表 -->
		<property name="convertKeyList">
			<list>
				<value>jdbc.url</value>
				<value>jdbc.username</value>
				<value>jdbc.password</value>
			</list>
		</property>
	</bean>


	<!-- 采用bonecp数据源 -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 设置每多少秒检查数据库中的空闲连接数 -->
		<property name="idleConnectionTestPeriodInMinutes" value="${cpool.checkoutTimeout}" />
		<!-- 设置连接空闲时间 -->
		<property name="idleMaxAgeInMinutes" value="${cpool.maxIdleTime}" />
		<!-- 设置每个分区中的最大连接数 -->
		<property name="maxConnectionsPerPartition" value="${cpool.maxPoolSize}" />
		<!-- 设置每个分区中的最小连接数 -->
		<property name="minConnectionsPerPartition" value="${cpool.minPoolSize}" />
		<!-- 设置分区 分区数为3 -->
		<property name="partitionCount" value="3" />
		<!-- 当连接池中的连接耗尽的时候 BoneCP一次同时获取的连接数 -->
		<property name="acquireIncrement" value="${cpool.acquireIncrement}" />
		<!-- 连接释放处理 线程数 -->
		<!-- <property name="releaseHelperThreads" value="2" /> -->
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis.xml" />
		<property name="mapperLocations" value="classpath*:mappers/*.xml" />
	</bean>

	<!-- 开启事务注解驱动 -->
	<tx:annotation-driven />

	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 配置事务传播特性 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<tx:method name="page*" read-only="true" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 配置哪些类的哪些方法参与事务 -->
	<aop:config>
		<aop:advisor pointcut="execution(* com.easy.*.service.impl.*.*(..))" advice-ref="transactionAdvice" />
	</aop:config>

	<!-- 定时器启动 -->
	<task:annotation-driven />
	<!-- 定时任务 -->
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="queueCapacity" value="1000" />
		<property name="keepAliveSeconds" value="120" />
	</bean>

</beans>